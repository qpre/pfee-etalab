// Generated by CoffeeScript 1.6.3
(function() {
  define(['jquery', 'app/Tile', 'app/Wheel', 'app/Button', 'app/States', 'masonry'], function($, Tile, Wheel, Button, STATES) {
    /*
      LEAFTR
      Handles the Leaftr plugins life cycle
    */

    var Leaftr;
    return Leaftr = (function() {
      Leaftr.prototype.options = null;

      Leaftr.prototype.data = null;

      Leaftr.prototype.main_container = null;

      Leaftr.prototype.tiles_container = null;

      Leaftr.prototype.loadingWheel = null;

      Leaftr.prototype.state = STATES.NORMAL;

      function Leaftr(main_container, options) {
        this.main_container = main_container;
        this.options = options;
        this.initContext();
        this.loadData();
      }

      Leaftr.prototype.initContext = function() {
        this.main_container.append('<div id="leaftr_tiles"></div>');
        this.main_container.css({
          'width': this.options.width,
          'min-height': this.options.height,
          'max-height': this.options.height
        });
        this.tiles_container = $('#leaftr_tiles');
        this.tiles_container.css({
          'width': '100%',
          'min-height': '100%',
          'max-height': '100%'
        });
        this.loadingWheel = new Wheel(this.tiles_container);
        return this.loadButton = new Button(this.main_container, this.loadMore());
      };

      Leaftr.prototype.loadData = function() {
        var self, url;
        this.setLoading();
        url = 'http://cow.etalab2.fr/api/1/datasets/related';
        this.options.city_code.forEach(function(city) {
          if (city !== 0) {
            return url += '?territory=CommuneOfFrance/' + city;
          }
        });
        this.options.department_code.forEach(function(department) {
          if (department !== 0) {
            return url += '?territory=DepartmentOfFrance/' + department;
          }
        });
        self = this;
        return $.ajax(url, {
          type: 'GET',
          dataType: 'json',
          error: function(jqXHR, textStatus, errorThrown) {
            return console.log("AJAX Error: " + textStatus);
          },
          success: function(data, textStatus, jqXHR) {
            self.loadTiles(data);
            return self.unsetLoading();
          }
        });
      };

      Leaftr.prototype.loadTiles = function(data) {
        var self, value, _i, _len, _ref, _results;
        this.tiles = new Array();
        self = this;
        _ref = data.value;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          value = _ref[_i];
          _results.push((function(value) {
            var related, _j, _len1, _ref1, _results1;
            _ref1 = value.related;
            _results1 = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              related = _ref1[_j];
              _results1.push((function(related) {
                return self.tiles.push(new Tile(related, self.parent, self.tiles.length));
              })(related));
            }
            return _results1;
          })(value));
        }
        return _results;
      };

      Leaftr.prototype.setLoading = function() {
        this.state = STATES.LOADING;
        this.loadingWheel.display();
        return this.loadButton.hide();
      };

      Leaftr.prototype.unsetLoading = function() {
        this.state = STATES.NORMAL;
        this.loadingWheel.hide();
        return this.loadButton.display();
      };

      Leaftr.prototype.loadMore = function() {
        return console.log('click !');
      };

      return Leaftr;

    })();
  });

}).call(this);
